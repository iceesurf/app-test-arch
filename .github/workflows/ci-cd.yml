name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies (Backend)
      run: |
        cd functions
        npm ci

    - name: Run backend tests
      run: |
        cd functions
        npm run test

    - name: Install dependencies (Frontend)
      run: |
        cd apps/web
        npm ci

    - name: Run frontend tests
      run: |
        cd apps/web
        npm run test

    - name: Build frontend
      run: |
        cd apps/web
        npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./functions/coverage
        flags: backend
        name: backend-coverage

    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        directory: ./apps/web/coverage
        flags: frontend
        name: frontend-coverage

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd functions
        npm ci
        cd ../../apps/web
        npm ci

    - name: Run ESLint (Backend)
      run: |
        cd functions
        npm run lint

    - name: Run ESLint (Frontend)
      run: |
        cd apps/web
        npm run lint

  security:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        cd functions
        npm ci
        cd ../../apps/web
        npm ci

    - name: Run security audit
      run: |
        cd functions
        npm audit --audit-level moderate
        cd ../../apps/web
        npm audit --audit-level moderate

  deploy:
    needs: [test, lint, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase
      run: |
        cd functions
        npm ci
        cd ..
        firebase deploy --token "${{ secrets.FIREBASE_TOKEN }}"
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

